====================程式設計說明====================
1. UI 介面的部分
>> 使用 UiGenerate物件控制UI的生成
2. 遊戲流程
>> 使用singleton的GameManager控制遊戲流程
4. 角色設計
>> 繼承抽象類別FightCharacter，限定一致的行為：用ReleaseSkill綁定戰鬥狀態，製造輸出分數。
5. 裝備設計
>> 繼承抽象類別Sword & Shield，使用多型呈現每種武器的戰鬥風格
>> 採用封裝綁定至角色身上，使角色能依據不同裝備使用不同技能。
====================回合設計====================
1. 將雙方的移動次數平均分配
>> 需要初始化一個每次進行回合之後疊加的單位、一個疊加後的值，主攻權為疊加值較小的一方。
>> 使用委派與模板設計底層Best方法，將傳入的兩個物件依照傳入的方法進行比較，最後回傳最好的一方。
====================技能設計====================
a. 獲得技能：技能會從不同裝備、角色的不同屬性中獲得，甚至裝備之間的組合也會有額外技能。
>> 實作：
>> 角色用Dictionary資料結構儲存自訂型態的delegate，設計方法接收從各個地方回傳的技能。
>> 回傳角色以追蹤角色身上的裝備

b. 技能有三種：
>> 1. 永久改變屬性型=>選擇作用對象
>> 2. 暫時賦予狀態型=>要計算作用回合數
>> 3. 造成傷害型
>> 實作：
>> 使用Dictionary資料結構、委派ReleaseSkill簽章
>> ReleaseSkill使用tuple回傳多個變數(傷害, 作用回合數)。
>> 使用 Queue 先進先出型資料結構，每回合將狀態初始化、並重新執行所有技能施放。
==================================================